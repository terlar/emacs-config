---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # renovate: datasource=github-releases depName=nixos/nix
  NIX_VERSION: 2.18.2

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      checks: ${{ steps.checks.outputs.checks }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # v16
        with:
          nix-package-url: https://releases.nixos.org/nix/nix-${{ env.NIX_VERSION }}/nix-${{ env.NIX_VERSION }}-x86_64-linux.tar.xz
          extra-conf: |
            http-connections = 50
            max-jobs = auto
          diagnostic-endpoint: ''

      - name: Find checks
        id: checks
        run: |
          nix eval --json --apply builtins.attrNames .#checks.x86_64-linux | sed 's|^|checks=|' >>$GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

  check:
    name: Check
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(needs.prepare.outputs.checks) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # v16
        with:
          nix-package-url: https://releases.nixos.org/nix/nix-${{ env.NIX_VERSION }}/nix-${{ env.NIX_VERSION }}-x86_64-linux.tar.xz
          extra-conf: |
            http-connections = 50
            max-jobs = auto
          diagnostic-endpoint: ''

      - name: Nix cache (cachix)
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          useDaemon: true
          name: terlar
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community

      - name: Run check
        run: nix build .#checks.x86_64-linux.${{ matrix.check }}

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # v16
        with:
          nix-package-url: https://releases.nixos.org/nix/nix-${{ env.NIX_VERSION }}/nix-${{ env.NIX_VERSION }}-x86_64-linux.tar.xz
          extra-conf: |
            http-connections = 50
            max-jobs = auto
          diagnostic-endpoint: ''

      - name: Nix cache (cachix)
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          useDaemon: true
          name: terlar
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community

      - name: Build default package
        run: nix build --print-build-logs
